% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.R
\name{graph}
\alias{graph}
\title{Create dependency graph from parsed script data}
\usage{
graph(parse_data, state_obj = NULL, validate_externals = TRUE)
}
\arguments{
\item{parse_data}{List from parse() function with 'scripts', 'inputs', 'outputs'}

\item{state_obj}{Optional. Data frame from read_state() function with 'file'
and 'stale' columns. If provided, will mark nodes as stale/fresh.}

\item{validate_externals}{Whether to validate that external files exist (default TRUE)}
}
\value{
List containing:
\itemize{
\item{nodes: Data frame with 'file', 'type', and 'stale' columns}
\item{edges: Data frame with 'from' and 'to' columns}
}
}
\description{
Builds a Directed Acyclic Graph (DAG) where all files are nodes.
Node types are determined from parse data:
\itemize{
\item Inputs: files only in parse_data$inputs (external inputs)
\item Outputs: files in parse_data$outputs (includes intermediates)
\item Scripts: script file names
}
}
\examples{
\dontrun{
# Parse scripts and create dependency graph
parsed <- parse()
graph_obj <- graph(parsed)

# With state information
state_obj <- read_state(".bakepipe.state")
graph_obj <- graph(parsed, state_obj)
}
}
